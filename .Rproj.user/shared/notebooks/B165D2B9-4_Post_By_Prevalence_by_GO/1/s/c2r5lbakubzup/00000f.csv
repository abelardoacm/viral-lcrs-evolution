"0",""
"0","retrieve_LCR_info_from_entry <- function(entry){"
"0","  entry.df <- seg.complexity.metadata.df %>% filter(grepl(entry, seg.complexity.metadata.df$Entry))"
"0","  entry.df.LCR <- entry.df %>% filter(grepl(""LCR"", entry.df$is_LCR))"
"0","  entry.LCR.count <- entry.df.LCR %>% nrow()"
"0","  entry.LCR.range <- sum(nchar(entry.df.LCR$seg_sequence))"
"0","  entry.df.NO_LCR <- entry.df %>% filter(!grepl(""LCR"", entry.df$is_LCR))"
"0","  entry.NO_LCR.range <- sum(nchar(entry.df.NO_LCR$seg_sequence))"
"0","  entry.LCR_density <- entry.LCR.range/entry.NO_LCR.range"
"0","  entry.return.df <- data.frame("
"0","    Entry = entry,"
"0","    Length = entry.LCR.range + entry.NO_LCR.range,"
"0","    LCR_count = entry.LCR.count,"
"0","    LCR_range = entry.LCR.range,"
"0","    NO_LCR_range = entry.NO_LCR.range,"
"0","    LCR_density = entry.LCR_density,"
"0","    GO_IDS = entry.df$`Gene Ontology IDs`[1]"
"0","  )"
"0","  entry.return.df"
"0","  return(entry.return.df)"
"0","}"
"0",""
"0","num_cores <- detectCores()"
"0","entries.retrieve_LCR_info.df <- do.call(""rbind"",mclapply(Uniprot.tsv.df$Entry, retrieve_LCR_info_from_entry, mc.cores = num_cores))"
"0",""
